


#To search key word life or love or hate
GET shakespeare/_search
{
  "query": {
    "match": {
      "text_entry": "life love hate"
    }
  }
}


#TO search for phase 
GET shakespeare/_search
{
  "query": {
    "match_phrase": {
      "text_entry": "where art thou"
    }
  }
}
Note:
"This will check for where art thou"


##Searching on NON-Analyzed queries
Term Filter
The term filter is used to filter by exact values, be they numbers, dates, Booleans, or not_analyzed exact-value string fields:

Term queries work with exact value matches and are generally very fast.


GET shakespeare/_search
{
  "query": {
    "term": {
      "play_name": {
        "value": "Othello"
      }
    }
  }
}
This will check the exact keyword Othello

##terms Filter
The terms filter is the same as the term filter, but allows you to specify multiple values
to match. If the field contains any of the specified values, the document matches:


OR condition with NON Analyzed queries using terms
GET shakespeare/_search
{
  "query": {
    "terms": {
      "play_name": [
        "Henry IV",
        "Othello"
      ]
    }
  }
}



Using the range 

GET shakespeare/_search
{
  "query": {
    "range": {
      "speech_number": {
        "gte": 1,
        "lte": 20
      }
    }
  }
}



#WILD card query 


GET shakespeare/_search
{
  "query": {
    "wildcard": {
      "line_number": "2.9*"
    }
  }
}

  
 Another example
 POST /mybooks/_search
{
  "query": {
    "wildcard": {
      "uuid": "22?2*"
    }
  }
}

? means : it is one character
* means : it can one or more character

#Queries with Operator
GET my_index/_search
{
  "query": {
    "match": {
      "title": {
        "query": "quick brown",
        "operator": "and"
      }
    }
  }
}

#Query with minimum should match
GET my_index/_search
{
  "query": {
    "match": {
      "title": {
        "query": "quick brown",
        "minimum_should_match": "75%"
      }
    }
  }
}





Relavancy Score
when a search is done a relavncy score is generated using some methods.
Relavancy scrore gets smaller smalller and smaller through out the results.
exmaple 
Those documents with higher number of matches will have high relavancy score
#To search based on the dates; format has be mentioned 
GET dates/_search
{
  "query": {
      "range": {
        "log_date": {
          "gte": "10/09/2018",
          "lte": "13/09/2018"
           , "format": "dd/MM/yyyy"
        }
      }
    
  }
}
